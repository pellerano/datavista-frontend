name: Desplegar FrontEnd DataVista

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: "datavista-frontend" # Nombre del App Service en Azure
  NODE_VERSION: "20.19.x" #Version de Node

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v4

      - name: Instalar NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Instalar dependencias
        run: |
          npm install -g @angular/cli@19.0.0
          npm ci

      - name: Compilar Ionic App (Production)
        run: npm run build -- --configuration=production

      - name: Guardar paquete generado para el trabajo de despliegue
        uses: actions/upload-artifact@v4
        with:
          name: datavista-frontend-build
          path: www/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref=='refs/heads/main'
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Descargar artifact
        uses: actions/download-artifact@v4
        with:
          name: datavista-frontend-build
          path: www

      - name: Crear ZIP para despliegue
        run: |
          cd www
          zip -r ../deploy.zip .

      - name: Desplegar a Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: "Production"
          package: deploy.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C4B0BC9608F04A239A6F5D593EDDBE04 }}
